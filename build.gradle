/*
 * Copyright 2025 pyamsoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jetbrains.kotlin.gradle.dsl.JvmTarget

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
  ext {
    kotlin = "2.2.20"
    coroutines = "1.10.2"

    // AndroidX
    annotation = "1.9.1"

    testRunner = "1.7.0"
  }
}

plugins {
  // Android AGP
  // https://developer.android.com/studio/build#top-level
  id("com.android.library") version "8.13.0" apply false

  // Fix Android build cache
  // https://github.com/gradle/android-cache-fix-gradle-plugin
  id("org.gradle.android.cache-fix") version "3.0.1" apply false

  // Kotlin
  // https://developer.android.com/studio/build#top-level
  id("org.jetbrains.kotlin.android") version "${kotlin}" apply false

  // Dokka
  // https://github.com/Kotlin/dokka
  id("org.jetbrains.dokka") version "2.0.0" apply false

  // Gradle version checker
  // https://github.com/ben-manes/gradle-versions-plugin
  id("com.github.ben-manes.versions") version "0.52.0" apply false

  // Version Filter Plugin
  // https://github.com/janderssonse/gradle-versions-filter-plugin
  id("se.ascp.gradle.gradle-versions-filter") version "0.1.16" apply false

  // Spotless
  // https://github.com/diffplug/spotless
  id "com.diffplug.spotless" version "8.0.0" apply false

  // Validate the public API
  // https://github.com/Kotlin/binary-compatibility-validator
  id("org.jetbrains.kotlinx.binary-compatibility-validator") version "0.18.1"

  // Gradle Doctor
  // https://runningcode.github.io/gradle-doctor/
  id("com.osacky.doctor") version "0.12.1" apply true
}

subprojects {
  apply plugin: "com.android.library"
  apply plugin: "org.gradle.android.cache-fix"
  apply plugin: "org.jetbrains.kotlin.android"
  apply plugin: "org.jetbrains.dokka"
  apply plugin: "maven-publish"

  android {
    compileSdk = 36

    //noinspection GroovyMissingReturnStatement
    defaultConfig {
      minSdk = 24

      // For vector drawables
      vectorDrawables.useSupportLibrary = true

      // Consumer proguard file
      consumerProguardFiles("proguard-rules.pro")
    }

    compileOptions {
      sourceCompatibility = JavaVersion.VERSION_21
      targetCompatibility = JavaVersion.VERSION_21

      // Flag to enable support for the new language APIs
      coreLibraryDesugaringEnabled = true
    }

    publishing {
      singleVariant("release") {
        withSourcesJar()
        withJavadocJar()
      }
    }

    buildTypes {
      debug {
        minifyEnabled = false
        shrinkResources = false
      }

      release {
        minifyEnabled = false
        shrinkResources = false
      }
    }

    buildFeatures {
      buildConfig = false
    }
  }

  kotlin {
    compilerOptions {
      jvmTarget = JvmTarget.JVM_21
      freeCompilerArgs.add("-Xexplicit-api=strict")
    }

    abiValidation {
      enabled = true
    }
  }

  // Configure matching toolchains
  // https://kotlinlang.org/docs/gradle-configure-project.html#2c42d1dc
  //
  // Or maybe don't
  // https://jakewharton.com/gradle-toolchains-are-rarely-a-good-idea/
  // kotlin {
  //   jvmToolchain(17)
  // }
  // java {
  //   toolchain {
  //     languageVersion.set(JavaLanguageVersion.of(17))
  //   }
  // }

  project.afterEvaluate {
    publishing {
      publications {
        Cachify(MavenPublication) {
          from project.components.release

          artifactId = project.name
          groupId = "com.github.pyamsoft"
          version = "0.3.7"
        }
      }
    }
  }

  dependencies {
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:2.1.5")
  }
}

allprojects {
  apply plugin: "com.github.ben-manes.versions"
  apply plugin: "com.diffplug.spotless"
  apply plugin: "se.ascp.gradle.gradle-versions-filter"

  repositories {
    gradlePluginPortal()
    google()
    mavenCentral()
  }

  tasks.withType(JavaCompile).forEach {
    options.compilerArgs.add("-Xlint:unchecked")
    options.compilerArgs.add("-Xlint:deprecation")
    options.deprecation = true
  }

  // Enable ABI checking
  //
  // https://github.com/JakeWharton/timber/commit/65747860b59e40a95866cbb4bd866f44a3b1880c
  // TODO: https://youtrack.jetbrains.com/issue/KT-78525
  tasks.named("check") {
    it.dependsOn(tasks.named("checkLegacyAbi"))
  }

  // Spotless
  spotless {
    java {
      target("src/**/*.java")

      removeUnusedImports()
      trimTrailingWhitespace()
      endWithNewline()
      leadingTabsToSpaces(2)
    }
    kotlin {
      target("src/**/*.kt")
      ktfmt()

      trimTrailingWhitespace()
      endWithNewline()
      leadingTabsToSpaces(2)
    }
    kotlinGradle {
      target("*.gradle.kts")
      ktfmt()

      trimTrailingWhitespace()
      endWithNewline()
      leadingTabsToSpaces(2)
    }
    groovyGradle {
      target("*.gradle")
      greclipse()

      trimTrailingWhitespace()
      endWithNewline()
      leadingTabsToSpaces(2)
    }
  }
}
