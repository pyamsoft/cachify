/*
 * Copyright 2019 Peter Kenji Yamanaka
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        kotlin_version = '1.3.61'
        dokka_version = "0.9.17"
    }
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        jcenter()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    ext {

        minSdk = 22
        maxSdk = 29

        coroutines = '1.3.3'
        annotation = '1.1.0'
        timber = "4.7.1"
    }

    dependencies {
        classpath "com.android.tools.build:gradle:3.5.3"

        // Dex count
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.6'

        // Gradle version checker
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.22.0'

        // To publish
        classpath "com.github.dcendents:android-maven-gradle-plugin:2.0"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"

        // Kotlin
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // Dokka
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$dokka_version"

        // Spotless
        classpath "com.diffplug.spotless:spotless-plugin-gradle:3.27.0"
    }
}

subprojects {
    apply plugin: 'com.android.library'
    apply plugin: 'kotlin-android'
    apply plugin: "com.getkeepsafe.dexcount"
    apply plugin: 'com.github.dcendents.android-maven'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'org.jetbrains.dokka-android'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: "com.diffplug.gradle.spotless"

    final String POM_GROUP = "com.pyamsoft.cachify"
    final String POM_VERSION = "0.0.7-SNAPSHOT"

    group = POM_GROUP
    version = POM_VERSION

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.source
    }

    task androidJavadocsJar(type: Jar, dependsOn: dokka) {
        classifier = 'javadoc'
        from "$buildDir/dokka"
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }

    spotless {
        java {
            target "**/*.java"
        }
        kotlin {
            target "**/*.kt"
            ktlint()
        }
    }

    // Ignore non-release libraries
    dependencyUpdates.resolutionStrategy {
        componentSelection { rules ->
            rules.all { selection ->
                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'eap', 'm', 'preview'].any { qualifier ->
                    selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                }
                if (rejected) {
                    selection.reject('Release candidate')
                }
            }
        }
    }

    android {
        compileSdkVersion rootProject.ext.maxSdk

        //noinspection GroovyMissingReturnStatement
        defaultConfig {
            minSdkVersion rootProject.ext.minSdk

            // For vector drawables
            vectorDrawables.useSupportLibrary = true

            // Consumer proguard file
            consumerProguardFiles "proguard-rules.pro"

            // Only English, I don't have any translations
            resConfigs "en"

            javaCompileOptions {
                annotationProcessorOptions {
                    // Fix kapt
                    includeCompileClasspath = true
                }
            }

            compileOptions {
                sourceCompatibility JavaVersion.VERSION_1_8
                targetCompatibility JavaVersion.VERSION_1_8
            }
        }

        buildTypes {
            debug {
                minifyEnabled false
                shrinkResources false
            }

            release {
                minifyEnabled false
                shrinkResources false
                proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            }
        }
    }

    project.afterEvaluate {
        publishing {
            publications {
                Cachify(MavenPublication) {
                    artifact bundleReleaseAar
                    artifact androidSourcesJar
                    artifact androidJavadocsJar
                    groupId POM_GROUP
                    artifactId project.name
                    version POM_VERSION

                    pom.withXml {
                        def dependenciesNode = asNode().appendNode('dependencies')

                        configurations.implementation.allDependencies.each {
                            // Ensure dependencies such as fileTree are not included in the pom.
                            if (it.name != 'unspecified') {
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', it.group)
                                dependencyNode.appendNode('artifactId', it.name)
                                dependencyNode.appendNode('version', it.version)
                            }
                        }
                    }
                }
            }
        }
    }

    final String GITHUB_ROOT_URL = "https://github.com/pyamsoft/cachify"
    bintray {
        user = 'pyamsoft'
        key = BINTRAY_API_KEY
        publications = ['Cachify']
        override = true
        pkg {
            repo = 'Cachify'
            name = project.name
            desc = "Simple in-memory cache of all the things"
            licenses = ['Apache-2.0']
            vcsUrl = "${GITHUB_ROOT_URL}/tree/master/${project.name}"
            websiteUrl = "${GITHUB_ROOT_URL}"
            version {
                name = POM_VERSION
                issueTrackerUrl = "${GITHUB_ROOT_URL}/issues"
                desc = "Simple in-memory cache of all the things"
                released = new Date()
                vcsTag = POM_VERSION
            }
        }
    }
}

allprojects {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        jcenter()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
        options.deprecation = true
    }
}

